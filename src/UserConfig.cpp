#include <set>
#include <string>
#include <sstream>
#include <fstream>
#include <iostream>

#include "UserConfig.h"
#include "Constants.h"

UserConfig::UserConfig(std::string configFile){
    std::fstream configFileStream(configFile, std::ios::in);
    std::string line;
    while (std::getline(configFileStream, line)){
        if(line == "[MACRO]") {
            while(std::getline(configFileStream,line)){
                setMacro.insert(line);
            }
        }
    }
    
    numAdditionalLines = 0;
}

std::string UserConfig::generateFakeHeader(){
    std::stringstream header;
    header << "#ifndef " << kernel_rewriter_constants::FAKE_HEADER_MACRO << "\n";
    header << "#define " << kernel_rewriter_constants::FAKE_HEADER_MACRO << "\n";
    header << "#include <opencl-c.h>\n"; // for opencl library calls
    numAdditionalLines += 3;
    for (auto it = setMacro.begin(); it != setMacro.end(); it++) {
        header << "#define " << *it << " 0\n";
        numAdditionalLines++;
    }
    header << "#endif\n";
    numAdditionalLines += 2; //including a new line generated by \n
    return header.str();
}

int UserConfig::getNumAdditionalLines(){
    return numAdditionalLines;
}
